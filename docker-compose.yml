version: '3'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: "rabbitmq:management"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
  order_app:
    build:
      context: order_app
      dockerfile: Dockerfile
    ports:
      - "80:80"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    depends_on:
      - postgres
      - rabbitmq

  promo_app:
    build:
      context: promo_app
      dockerfile: Dockerfile
    ports:
      - "81:81"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    depends_on:
      - rabbitmq
      - order_app
  
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: "start-dev"

  # keycloak:
  #   image: jboss/keycloak:16.1.0   
  #   volumes:
  #     - ./realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
  #   command:
  #     - "-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
  #   environment:
  #     DB_VENDOR: POSTGRES
  #     DB_ADDR: postgres
  #     DB_DATABASE: test
  #     DB_USER: postgres
  #     DB_SCHEMA: public
  #     DB_PASSWORD: password
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #     PROXY_ADDRESS_FORWARDING: "true"
  #     KEYCLOAK_LOGLEVEL: DEBUG
  #   ports:
  #     - '8085:8080'
  #   depends_on:
  #     - postgres
  #   restart:
  #     always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: max@max.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./config/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - app
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - app
networks:
  app:
    name: app

volumes:
  postgres_data: